{"ast":null,"code":"var _jsxFileName = \"/Users/yoonvelop/Documents/GitHub/portfolio-rct/src/components/common/List.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport palette from \"../../lib/styles/palette\";\nimport { RiArrowLeftSLine, RiArrowRightSLine } from \"react-icons/ri\";\n\nconst List = ({\n  vertical,\n  scroll,\n  content,\n  component: Component\n}) => {\n  const scrollRef = useRef();\n  const [hasScroll, setHasScroll] = useState();\n  const [leftLocation, setlleftLocation] = useState(false);\n  useEffect(() => {\n    resizeWindow();\n    window.addEventListener(\"resize\", resizeWindow);\n    return () => window.removeEventListener(\"resize\", resizeWindow);\n  }, [hasScroll]);\n\n  const resizeWindow = () => {\n    const hasHorizontalScrollbar = scrollRef.current.scrollWidth > scrollRef.current.clientWidth;\n    setHasScroll(hasHorizontalScrollbar);\n  };\n\n  const onScroll = () => {\n    scrollRef.current.scrollLeft === 0 ? setlleftLocation(false) : setlleftLocation(true);\n  };\n\n  const onClick = e => {\n    const left = leftLocation ? 0 : scrollRef.current.scrollWidth;\n    scrollRef.current.scrollTo({\n      top: window.scrollTop,\n      left: left,\n      behavior: \"smooth\"\n    });\n    setlleftLocation(!leftLocation);\n  };\n\n  return /*#__PURE__*/React.createElement(ListBlock, {\n    ref: scrollRef,\n    vertical: vertical,\n    scroll: scroll,\n    onScroll: onScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, hasScroll && /*#__PURE__*/React.createElement(MoveButton, {\n    left: leftLocation,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, leftLocation ? /*#__PURE__*/React.createElement(RiArrowLeftSLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(RiArrowRightSLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 50\n    }\n  })), content ? content.map(item => /*#__PURE__*/React.createElement(Component, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }\n  })) : /*#__PURE__*/React.createElement(Component, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst MoveButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 50%;\n  background: ${palette.white};\n  cursor: pointer;\n  color: ${palette.gray};\n  align-self: center;\n  outline: 0;\n  border: 0;\n  position: absolute;\n  font-size: 1.5rem;\n  right: -1.5rem;\n  ${props => props.left && css`\n      right: unset;\n      left: -1.5rem;\n    `}\n\n  @media only screen and (max-width: 1200px) {\n    display: none;\n  }\n`;\nconst ListBlock = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  ${props => props.vertical && css`\n      flex-direction: column;\n    `}\n  ${props => props.scroll && css`\n      overflow-x: auto;\n      flex-wrap: nowrap;\n    `}\n\n  padding-bottom: 1rem;\n  /* &::-webkit-scrollbar {\n    visibility: hidden;\n  }\n  @media only screen and (min-width: 1200px) {\n    &::-webkit-scrollbar {\n      visibility: visible;\n    }\n  } */\n`;\nexport default List;","map":{"version":3,"sources":["/Users/yoonvelop/Documents/GitHub/portfolio-rct/src/components/common/List.js"],"names":["React","useEffect","useRef","useState","styled","css","palette","RiArrowLeftSLine","RiArrowRightSLine","List","vertical","scroll","content","component","Component","scrollRef","hasScroll","setHasScroll","leftLocation","setlleftLocation","resizeWindow","window","addEventListener","removeEventListener","hasHorizontalScrollbar","current","scrollWidth","clientWidth","onScroll","scrollLeft","onClick","e","left","scrollTo","top","scrollTop","behavior","map","item","id","MoveButton","button","white","gray","props","ListBlock","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport palette from \"../../lib/styles/palette\";\nimport { RiArrowLeftSLine, RiArrowRightSLine } from \"react-icons/ri\";\nconst List = ({ vertical, scroll, content, component: Component }) => {\n  const scrollRef = useRef();\n  const [hasScroll, setHasScroll] = useState();\n  const [leftLocation, setlleftLocation] = useState(false);\n\n  useEffect(() => {\n    resizeWindow();\n    window.addEventListener(\"resize\", resizeWindow);\n    return () => window.removeEventListener(\"resize\", resizeWindow);\n  }, [hasScroll]);\n\n  const resizeWindow = () => {\n    const hasHorizontalScrollbar =\n      scrollRef.current.scrollWidth > scrollRef.current.clientWidth;\n    setHasScroll(hasHorizontalScrollbar);\n  };\n\n  const onScroll = () => {\n    scrollRef.current.scrollLeft === 0\n      ? setlleftLocation(false)\n      : setlleftLocation(true);\n  };\n  const onClick = (e) => {\n    const left = leftLocation ? 0 : scrollRef.current.scrollWidth;\n    scrollRef.current.scrollTo({\n      top: window.scrollTop,\n      left: left,\n      behavior: \"smooth\",\n    });\n    setlleftLocation(!leftLocation);\n  };\n\n  return (\n    <ListBlock\n      ref={scrollRef}\n      vertical={vertical}\n      scroll={scroll}\n      onScroll={onScroll}\n    >\n      {hasScroll && (\n        <MoveButton left={leftLocation} onClick={onClick}>\n          {leftLocation ? <RiArrowLeftSLine /> : <RiArrowRightSLine />}\n        </MoveButton>\n      )}\n      {content ? (\n        content.map((item) => <Component key={item.id} item={item}></Component>)\n      ) : (\n        <Component />\n      )}\n    </ListBlock>\n  );\n};\n\nconst MoveButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 50%;\n  background: ${palette.white};\n  cursor: pointer;\n  color: ${palette.gray};\n  align-self: center;\n  outline: 0;\n  border: 0;\n  position: absolute;\n  font-size: 1.5rem;\n  right: -1.5rem;\n  ${(props) =>\n    props.left &&\n    css`\n      right: unset;\n      left: -1.5rem;\n    `}\n\n  @media only screen and (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst ListBlock = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  ${(props) =>\n    props.vertical &&\n    css`\n      flex-direction: column;\n    `}\n  ${(props) =>\n    props.scroll &&\n    css`\n      overflow-x: auto;\n      flex-wrap: nowrap;\n    `}\n\n  padding-bottom: 1rem;\n  /* &::-webkit-scrollbar {\n    visibility: hidden;\n  }\n  @media only screen and (min-width: 1200px) {\n    &::-webkit-scrollbar {\n      visibility: visible;\n    }\n  } */\n`;\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}
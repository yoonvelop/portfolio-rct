{"ast":null,"code":"var _jsxFileName = \"/Users/yoonvelop/Documents/GitHub/portfolio-rct/src/components/common/List.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport palette from \"../../lib/styles/palette\";\nimport { RiArrowLeftSLine, RiArrowRightSLine } from \"react-icons/ri\";\n\nconst List = ({\n  vertical,\n  content,\n  component: Component\n}) => {\n  const scrollRef = useRef(null);\n  const [hasScroll, setHasScroll] = useState();\n  const [scrollHeight, setScrollHeight] = useState(scrollRef.current.scrollHeight);\n  const [leftLocation, setlleftLocation] = useState(false);\n  useEffect(() => {\n    setScrollHeight(scrollRef.current.scrollHeight);\n    resizeWindow();\n    window.addEventListener(\"resize\", resizeWindow);\n    return () => window.removeEventListener(\"resize\", resizeWindow);\n  }, [hasScroll, scrollHeight]);\n\n  const resizeWindow = () => {\n    const hasHorizontalScrollbar = scrollRef.current.scrollWidth > scrollRef.current.clientWidth;\n    setHasScroll(hasHorizontalScrollbar);\n  };\n\n  const onClick = e => {\n    const dd = leftLocation ? 0 : scrollRef.current.scrollHeight;\n    scrollRef.current.scrollTo({\n      top: window.scrollTop,\n      left: dd,\n      behavior: \"smooth\"\n    });\n    setlleftLocation(!leftLocation);\n  };\n\n  return /*#__PURE__*/React.createElement(SkillListBlock, {\n    ref: scrollRef,\n    vertical: vertical,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, hasScroll && /*#__PURE__*/React.createElement(MoveButton, {\n    left: leftLocation,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, leftLocation ? /*#__PURE__*/React.createElement(RiArrowLeftSLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(RiArrowRightSLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 50\n    }\n  })), content && content.map(item => /*#__PURE__*/React.createElement(Component, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst MoveButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 50%;\n  background: ${palette.white};\n  cursor: pointer;\n  color: ${palette.gray};\n  align-self: center;\n  outline: 0;\n  border: 0;\n  position: absolute;\n  font-size: 1.5rem;\n  right: -1rem;\n  ${props => props.left && css`\n      left: -1rem;\n    `}\n`;\nconst SkillListBlock = styled.div`\n  display: flex;\n  ${props => props.vertical && css`\n      flex-direction: column;\n    `}\n\n  overflow-x: auto;\n  padding-bottom: 1rem;\n  &::-webkit-scrollbar {\n    visibility: hidden;\n  }\n`;\nexport default List;","map":{"version":3,"sources":["/Users/yoonvelop/Documents/GitHub/portfolio-rct/src/components/common/List.js"],"names":["React","useEffect","useRef","useState","styled","css","palette","RiArrowLeftSLine","RiArrowRightSLine","List","vertical","content","component","Component","scrollRef","hasScroll","setHasScroll","scrollHeight","setScrollHeight","current","leftLocation","setlleftLocation","resizeWindow","window","addEventListener","removeEventListener","hasHorizontalScrollbar","scrollWidth","clientWidth","onClick","e","dd","scrollTo","top","scrollTop","left","behavior","map","item","id","MoveButton","button","white","gray","props","SkillListBlock","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport palette from \"../../lib/styles/palette\";\nimport { RiArrowLeftSLine, RiArrowRightSLine } from \"react-icons/ri\";\nconst List = ({ vertical, content, component: Component }) => {\n  const scrollRef = useRef(null);\n  const [hasScroll, setHasScroll] = useState();\n  const [scrollHeight, setScrollHeight] = useState(\n    scrollRef.current.scrollHeight\n  );\n  const [leftLocation, setlleftLocation] = useState(false);\n\n  useEffect(() => {\n    setScrollHeight(scrollRef.current.scrollHeight);\n    resizeWindow();\n    window.addEventListener(\"resize\", resizeWindow);\n    return () => window.removeEventListener(\"resize\", resizeWindow);\n  }, [hasScroll, scrollHeight]);\n\n  const resizeWindow = () => {\n    const hasHorizontalScrollbar =\n      scrollRef.current.scrollWidth > scrollRef.current.clientWidth;\n    setHasScroll(hasHorizontalScrollbar);\n  };\n\n  const onClick = (e) => {\n    const dd = leftLocation ? 0 : scrollRef.current.scrollHeight;\n    scrollRef.current.scrollTo({\n      top: window.scrollTop,\n      left: dd,\n      behavior: \"smooth\",\n    });\n    setlleftLocation(!leftLocation);\n  };\n\n  return (\n    <SkillListBlock ref={scrollRef} vertical={vertical}>\n      {hasScroll && (\n        <MoveButton left={leftLocation} onClick={onClick}>\n          {leftLocation ? <RiArrowLeftSLine /> : <RiArrowRightSLine />}\n        </MoveButton>\n      )}\n      {content &&\n        content.map((item) => (\n          <Component key={item.id} item={item}></Component>\n        ))}\n    </SkillListBlock>\n  );\n};\n\nconst MoveButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 50%;\n  background: ${palette.white};\n  cursor: pointer;\n  color: ${palette.gray};\n  align-self: center;\n  outline: 0;\n  border: 0;\n  position: absolute;\n  font-size: 1.5rem;\n  right: -1rem;\n  ${(props) =>\n    props.left &&\n    css`\n      left: -1rem;\n    `}\n`;\n\nconst SkillListBlock = styled.div`\n  display: flex;\n  ${(props) =>\n    props.vertical &&\n    css`\n      flex-direction: column;\n    `}\n\n  overflow-x: auto;\n  padding-bottom: 1rem;\n  &::-webkit-scrollbar {\n    visibility: hidden;\n  }\n`;\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}
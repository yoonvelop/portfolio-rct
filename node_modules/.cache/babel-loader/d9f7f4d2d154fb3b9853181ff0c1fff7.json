{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/yoonvelop/Documents/GitHub/portfolio-rct/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  font-size: 1rem;\\n  color: \",\";\\n  word-break: keep-all;\\n  margin-bottom: 0.2rem;\\n  @media only screen and (max-width: 480px) {\\n    font-size: 0.9rem;\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  font-size: 1.1rem;\\n  color: \",\";\\n  font-weight: 600;\\n  margin: 0.1rem 0 0.5rem;\\n  @media only screen and (max-width: 480px) {\\n    font-size: 1rem;\\n    margin: 0.1rem 0 0.3rem;\\n  }\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 0.8rem;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  @media only screen and (max-width: 600px) {\\n    width: 60%;\\n    margin-left: 1rem;\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  margin-bottom: 0.5rem;\\n  width: 100%;\\n  height: 10rem;\\n  border-radius: 10px;\\n  overflow: hidden;\\n  background: \",\";\\n  background-size: cover;\\n  background-position: top;\\n  background-repeat: no-repeat;\\n\\n  @media only screen and (max-width: 600px) {\\n    flex: 1;\\n    height: 100%;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  width: calc(100% / 4);\\n  color: \",\";\\n  padding: 1rem;\\n  cursor: pointer;\\n\\n  @media only screen and (max-width: 1200px) {\\n    width: calc(100% / 3);\\n  }\\n\\n  @media only screen and (max-width: 850px) {\\n    width: calc(100% / 2);\\n  }\\n\\n  @media only screen and (max-width: 600px) {\\n    width: 100%;\\n    flex-direction: row;\\n    padding: 1rem 0;\\n    height: 11rem;\\n    margin-left: 0;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import{Link}from\"react-router-dom\";import styled from\"styled-components\";import palette from\"../../../lib/styles/palette\";import StackItem from\"../../common/StackItem\";var Project=function Project(_ref){var item=_ref.item;return/*#__PURE__*/React.createElement(ProjectItem,{to:\"/detail/\".concat(item.id)},/*#__PURE__*/React.createElement(ImageBox,{img:item.thumbnail}),/*#__PURE__*/React.createElement(MetaBox,null,/*#__PURE__*/React.createElement(TypeText,null,item.type,\" project\"),/*#__PURE__*/React.createElement(Title,null,item.title),/*#__PURE__*/React.createElement(SubText,null,item.summary),/*#__PURE__*/React.createElement(StackBox,null,item.stack.map(function(stack,index){return/*#__PURE__*/React.createElement(StackItem,{key:index,stack:stack});}))));};var ProjectItem=styled(Link)(_templateObject(),palette.white);var ImageBox=styled.div(_templateObject2(),function(props){return\"url(\\\"\".concat(props.img,\"\\\")\");});var MetaBox=styled.div(_templateObject3());var TypeText=styled.span(_templateObject4(),palette.white);var Title=styled.div(_templateObject5(),palette.white);var SubText=styled.span(_templateObject6(),palette.text_gray);var StackBox=styled.div(_templateObject7());export default Project;","map":{"version":3,"sources":["/Users/yoonvelop/Documents/GitHub/portfolio-rct/src/components/home/project/Project.js"],"names":["React","Link","styled","palette","StackItem","Project","item","id","thumbnail","type","title","summary","stack","map","index","ProjectItem","white","ImageBox","div","props","img","MetaBox","TypeText","span","Title","SubText","text_gray","StackBox"],"mappings":"s3EAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC5B,mBACE,oBAAC,WAAD,EAAa,EAAE,mBAAaA,IAAI,CAACC,EAAlB,CAAf,eACE,oBAAC,QAAD,EAAU,GAAG,CAAED,IAAI,CAACE,SAApB,EADF,cAIE,oBAAC,OAAD,mBACE,oBAAC,QAAD,MAAWF,IAAI,CAACG,IAAhB,YADF,cAEE,oBAAC,KAAD,MAAQH,IAAI,CAACI,KAAb,CAFF,cAGE,oBAAC,OAAD,MAAUJ,IAAI,CAACK,OAAf,CAHF,cAIE,oBAAC,QAAD,MACGL,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAe,SAACD,KAAD,CAAQE,KAAR,qBACd,oBAAC,SAAD,EAAW,GAAG,CAAEA,KAAhB,CAAuB,KAAK,CAAEF,KAA9B,EADc,EAAf,CADH,CAJF,CAJF,CADF,CAiBD,CAlBD,CAoBA,GAAMG,CAAAA,WAAW,CAAGb,MAAM,CAACD,IAAD,CAAT,mBAKNE,OAAO,CAACa,KALF,CAAjB,CA0BA,GAAMC,CAAAA,QAAQ,CAAGf,MAAM,CAACgB,GAAV,oBAME,SAACC,KAAD,wBAAmBA,KAAK,CAACC,GAAzB,SANF,CAAd,CAiBA,GAAMC,CAAAA,OAAO,CAAGnB,MAAM,CAACgB,GAAV,oBAAb,CAMA,GAAMI,CAAAA,QAAQ,CAAGpB,MAAM,CAACqB,IAAV,oBACHpB,OAAO,CAACa,KADL,CAAd,CAKA,GAAMQ,CAAAA,KAAK,CAAGtB,MAAM,CAACgB,GAAV,oBAEAf,OAAO,CAACa,KAFR,CAAX,CAWA,GAAMS,CAAAA,OAAO,CAAGvB,MAAM,CAACqB,IAAV,oBAEFpB,OAAO,CAACuB,SAFN,CAAb,CAUA,GAAMC,CAAAA,QAAQ,CAAGzB,MAAM,CAACgB,GAAV,oBAAd,CAKA,cAAeb,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport palette from \"../../../lib/styles/palette\";\nimport StackItem from \"../../common/StackItem\";\n\nconst Project = ({ item }) => {\n  return (\n    <ProjectItem to={`/detail/${item.id}`}>\n      <ImageBox img={item.thumbnail}>\n        {/* <img src={item.thumbnail} alt=\"project thumbnail\" /> */}\n      </ImageBox>\n      <MetaBox>\n        <TypeText>{item.type} project</TypeText>\n        <Title>{item.title}</Title>\n        <SubText>{item.summary}</SubText>\n        <StackBox>\n          {item.stack.map((stack, index) => (\n            <StackItem key={index} stack={stack} />\n          ))}\n        </StackBox>\n      </MetaBox>\n    </ProjectItem>\n  );\n};\n\nconst ProjectItem = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: calc(100% / 4);\n  color: ${palette.white};\n  padding: 1rem;\n  cursor: pointer;\n\n  @media only screen and (max-width: 1200px) {\n    width: calc(100% / 3);\n  }\n\n  @media only screen and (max-width: 850px) {\n    width: calc(100% / 2);\n  }\n\n  @media only screen and (max-width: 600px) {\n    width: 100%;\n    flex-direction: row;\n    padding: 1rem 0;\n    height: 11rem;\n    margin-left: 0;\n  }\n`;\n\nconst ImageBox = styled.div`\n  margin-bottom: 0.5rem;\n  width: 100%;\n  height: 10rem;\n  border-radius: 10px;\n  overflow: hidden;\n  background: ${(props) => `url(\"${props.img}\")`};\n  background-size: cover;\n  background-position: top;\n  background-repeat: no-repeat;\n\n  @media only screen and (max-width: 600px) {\n    flex: 1;\n    height: 100%;\n  }\n`;\n\nconst MetaBox = styled.div`\n  @media only screen and (max-width: 600px) {\n    width: 60%;\n    margin-left: 1rem;\n  }\n`;\nconst TypeText = styled.span`\n  color: ${palette.white};\n  font-size: 0.8rem;\n`;\n\nconst Title = styled.div`\n  font-size: 1.1rem;\n  color: ${palette.white};\n  font-weight: 600;\n  margin: 0.1rem 0 0.5rem;\n  @media only screen and (max-width: 480px) {\n    font-size: 1rem;\n    margin: 0.1rem 0 0.3rem;\n  }\n`;\n\nconst SubText = styled.span`\n  font-size: 1rem;\n  color: ${palette.text_gray};\n  word-break: keep-all;\n  margin-bottom: 0.2rem;\n  @media only screen and (max-width: 480px) {\n    font-size: 0.9rem;\n  }\n`;\n\nconst StackBox = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}